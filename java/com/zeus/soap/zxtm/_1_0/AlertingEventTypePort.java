/**
 * AlertingEventTypePort.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.
 */

package com.zeus.soap.zxtm._1_0;

public interface AlertingEventTypePort extends java.rmi.Remote {

    /**
     * Add the names of Cloud Credentials that will trigger the specified
     * event types. If the event type has no Cloud Credentials names configured,
     * all objects of this type will match.
     */
    public void addCloudcredentialNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Adds custom events the specified event types will trigger on.
     * Custom events are generated by TrafficScript using the event.emit
     * function. To match all custom events, include '*' in the passed array.
     */
    public void addCustomEvents(java.lang.String[] names, java.lang.String[][] events) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Add an event type that will cause an action to be triggered
     * when its conditions are met.
     */
    public void addEventType(java.lang.String[] names, com.zeus.soap.zxtm._1_0.AlertingEventTypeEventType[] eventtypes) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.InvalidObjectName, com.zeus.soap.zxtm._1_0.ObjectAlreadyExists;

    /**
     * Adds events to an event type. An event is something that must
     * occur for the associated actions to be triggered (only one event needs
     * to happen to trigger the actions). At least one event must be specified.
     */
    public void addEvents(java.lang.String[] names, com.zeus.soap.zxtm._1_0.AlertingEventTypeEvent[][] events) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Add the names of License Key that will trigger the specified
     * event types. If the event type has no License Key names configured,
     * all objects of this type will match.
     */
    public void addLicensekeyNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Add the names of Location that will trigger the specified event
     * types. If the event type has no Location names configured, all objects
     * of this type will match.
     */
    public void addLocationNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Add an action that will be run when this event type is triggered.
     */
    public void addMappedActions(java.lang.String[] names, java.lang.String[][] values) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Add the names of Monitor that will trigger the specified event
     * types. If the event type has no Monitor names configured, all objects
     * of this type will match.
     */
    public void addMonitorNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Add the names of Node that will trigger the specified event
     * types. If the event type has no Node names configured, all objects
     * of this type will match.
     */
    public void addNodeNames(java.lang.String[] names, java.lang.String[][] events) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Add the names of Pool that will trigger the specified event
     * types. If the event type has no Pool names configured, all objects
     * of this type will match.
     */
    public void addPoolNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Add the names of Service Protection Class that will trigger
     * the specified event types. If the event type has no Service Protection
     * Class names configured, all objects of this type will match.
     */
    public void addProtectionNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Add the names of Rule that will trigger the specified event
     * types. If the event type has no Rule names configured, all objects
     * of this type will match.
     */
    public void addRuleNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Add the names of GLB Service that will trigger the specified
     * event types. If the event type has no GLB Service names configured,
     * all objects of this type will match.
     */
    public void addServiceNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Add the names of SLM Class that will trigger the specified
     * event types. If the event type has no SLM Class names configured,
     * all objects of this type will match.
     */
    public void addSlmNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Add the names of Virtual Server that will trigger the specified
     * event types. If the event type has no Virtual Server names configured,
     * all objects of this type will match.
     */
    public void addVserverNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Add the names of Traffic Manager that will trigger the specified
     * event types. If the event type has no Traffic Manager names configured,
     * all objects of this type will match.
     */
    public void addZxtmNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Copy each of the named event types.
     */
    public void copyEventType(java.lang.String[] names, java.lang.String[] new_names) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist, com.zeus.soap.zxtm._1_0.InvalidObjectName, com.zeus.soap.zxtm._1_0.ObjectAlreadyExists;

    /**
     * Removes one or more event types.
     */
    public void deleteEventType(java.lang.String[] names) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Get the names of Cloud Credentials that will trigger the specified
     * event types. If the event type has no Cloud Credentials names configured,
     * all objects of this type will match.
     */
    public java.lang.String[][] getCloudcredentialNames(java.lang.String[] names) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Gets the custom events of the specified event types. Custom
     * events are generated by TrafficScript using the event.emit function.
     * If '*' is returned, all custom events will trigger this event type.
     */
    public java.lang.String[][] getCustomEvents(java.lang.String[] names) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Returns a set of event type objects for the specified names.
     */
    public com.zeus.soap.zxtm._1_0.AlertingEventTypeEventType[] getEventType(java.lang.String[] names) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Returns the names of all event types in the system.
     */
    public java.lang.String[] getEventTypeNames() throws java.rmi.RemoteException;

    /**
     * Gets an event type's events. An event is something that must
     * occur for the associated actions to be triggered (only one event needs
     * to happen to trigger the actions). At least one event must be specified.
     */
    public com.zeus.soap.zxtm._1_0.AlertingEventTypeEvent[][] getEvents(java.lang.String[] names) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Get the names of License Key that will trigger the specified
     * event types. If the event type has no License Key names configured,
     * all objects of this type will match.
     */
    public java.lang.String[][] getLicensekeyNames(java.lang.String[] names) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Get the names of Location that will trigger the specified event
     * types. If the event type has no Location names configured, all objects
     * of this type will match.
     */
    public java.lang.String[][] getLocationNames(java.lang.String[] names) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Get an action that will be run when this event type is triggered.
     */
    public java.lang.String[][] getMappedActions(java.lang.String[] names) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Get the names of Monitor that will trigger the specified event
     * types. If the event type has no Monitor names configured, all objects
     * of this type will match.
     */
    public java.lang.String[][] getMonitorNames(java.lang.String[] names) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Get the names of Node that will trigger the specified event
     * types. If the event type has no Node names configured, all objects
     * of this type will match.
     */
    public java.lang.String[][] getNodeNames(java.lang.String[] names) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Get the note for each of the named Event Types.
     */
    public java.lang.String[] getNote(java.lang.String[] names) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Get the names of Pool that will trigger the specified event
     * types. If the event type has no Pool names configured, all objects
     * of this type will match.
     */
    public java.lang.String[][] getPoolNames(java.lang.String[] names) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Get the names of Service Protection Class that will trigger
     * the specified event types. If the event type has no Service Protection
     * Class names configured, all objects of this type will match.
     */
    public java.lang.String[][] getProtectionNames(java.lang.String[] names) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Get the names of Rule that will trigger the specified event
     * types. If the event type has no Rule names configured, all objects
     * of this type will match.
     */
    public java.lang.String[][] getRuleNames(java.lang.String[] names) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Get the names of GLB Service that will trigger the specified
     * event types. If the event type has no GLB Service names configured,
     * all objects of this type will match.
     */
    public java.lang.String[][] getServiceNames(java.lang.String[] names) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Get the names of SLM Class that will trigger the specified
     * event types. If the event type has no SLM Class names configured,
     * all objects of this type will match.
     */
    public java.lang.String[][] getSlmNames(java.lang.String[] names) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Get the names of Virtual Server that will trigger the specified
     * event types. If the event type has no Virtual Server names configured,
     * all objects of this type will match.
     */
    public java.lang.String[][] getVserverNames(java.lang.String[] names) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Get the names of Traffic Manager that will trigger the specified
     * event types. If the event type has no Traffic Manager names configured,
     * all objects of this type will match.
     */
    public java.lang.String[][] getZxtmNames(java.lang.String[] names) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Remove the names of Cloud Credentials that will trigger the
     * specified event types. If the event type has no Cloud Credentials
     * names configured, all objects of this type will match.
     */
    public void removeCloudcredentialNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Removes custom events from the specified event types. Custom
     * events are generated by TrafficScript using the event.emit function.
     * If you pass '*', all custom events will be removed.
     */
    public void removeCustomEvents(java.lang.String[] names, java.lang.String[][] events) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Removes events from the event type. An event is something that
     * must occur for the associated actions to be triggered (only one event
     * needs to happen to trigger the actions). At least one event must be
     * specified.
     */
    public void removeEvents(java.lang.String[] names, com.zeus.soap.zxtm._1_0.AlertingEventTypeEvent[][] events) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Remove the names of License Key that will trigger the specified
     * event types. If the event type has no License Key names configured,
     * all objects of this type will match.
     */
    public void removeLicensekeyNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Remove the names of Location that will trigger the specified
     * event types. If the event type has no Location names configured, all
     * objects of this type will match.
     */
    public void removeLocationNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Remove an action that will be run when this event type is triggered.
     */
    public void removeMappedActions(java.lang.String[] names, java.lang.String[][] values) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Remove the names of Monitor that will trigger the specified
     * event types. If the event type has no Monitor names configured, all
     * objects of this type will match.
     */
    public void removeMonitorNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Remove the names of Node that will trigger the specified event
     * types. If the event type has no Node names configured, all objects
     * of this type will match.
     */
    public void removeNodeNames(java.lang.String[] names, java.lang.String[][] events) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Remove the names of Pool that will trigger the specified event
     * types. If the event type has no Pool names configured, all objects
     * of this type will match.
     */
    public void removePoolNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Remove the names of Service Protection Class that will trigger
     * the specified event types. If the event type has no Service Protection
     * Class names configured, all objects of this type will match.
     */
    public void removeProtectionNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Remove the names of Rule that will trigger the specified event
     * types. If the event type has no Rule names configured, all objects
     * of this type will match.
     */
    public void removeRuleNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Remove the names of GLB Service that will trigger the specified
     * event types. If the event type has no GLB Service names configured,
     * all objects of this type will match.
     */
    public void removeServiceNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Remove the names of SLM Class that will trigger the specified
     * event types. If the event type has no SLM Class names configured,
     * all objects of this type will match.
     */
    public void removeSlmNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Remove the names of Virtual Server that will trigger the specified
     * event types. If the event type has no Virtual Server names configured,
     * all objects of this type will match.
     */
    public void removeVserverNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Remove the names of Traffic Manager that will trigger the specified
     * event types. If the event type has no Traffic Manager names configured,
     * all objects of this type will match.
     */
    public void removeZxtmNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Rename each of the named event types.
     */
    public void renameEventType(java.lang.String[] names, java.lang.String[] new_names) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist, com.zeus.soap.zxtm._1_0.InvalidObjectName, com.zeus.soap.zxtm._1_0.ObjectAlreadyExists;

    /**
     * Set the names of Cloud Credentials that will trigger the specified
     * event types. If the event type has no Cloud Credentials names configured,
     * all objects of this type will match.
     */
    public void setCloudcredentialNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Gets the custom events the specified event types will trigger
     * on. Custom events are generated by TrafficScript using the event.emit
     * function. To match all custom events, include '*' in the passed array.
     */
    public void setCustomEvents(java.lang.String[] names, java.lang.String[][] events) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Sets an event type's events (all old events will be removed).
     * An event is something that must occur for the associated actions to
     * be triggered (only one event needs to happen to trigger the actions).
     * At least one event must be specified.
     */
    public void setEvents(java.lang.String[] names, com.zeus.soap.zxtm._1_0.AlertingEventTypeEvent[][] events) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Set the names of License Key that will trigger the specified
     * event types. If the event type has no License Key names configured,
     * all objects of this type will match.
     */
    public void setLicensekeyNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Set the names of Location that will trigger the specified event
     * types. If the event type has no Location names configured, all objects
     * of this type will match.
     */
    public void setLocationNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Set an action that will be run when this event type is triggered.
     */
    public void setMappedActions(java.lang.String[] names, java.lang.String[][] values) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Set the names of Monitor that will trigger the specified event
     * types. If the event type has no Monitor names configured, all objects
     * of this type will match.
     */
    public void setMonitorNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Set the names of Node that will trigger the specified event
     * types. If the event type has no Node names configured, all objects
     * of this type will match.
     */
    public void setNodeNames(java.lang.String[] names, java.lang.String[][] events) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Set the note for each of the named Event Types.
     */
    public void setNote(java.lang.String[] names, java.lang.String[] values) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Set the names of Pool that will trigger the specified event
     * types. If the event type has no Pool names configured, all objects
     * of this type will match.
     */
    public void setPoolNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Set the names of Service Protection Class that will trigger
     * the specified event types. If the event type has no Service Protection
     * Class names configured, all objects of this type will match.
     */
    public void setProtectionNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Set the names of Rule that will trigger the specified event
     * types. If the event type has no Rule names configured, all objects
     * of this type will match.
     */
    public void setRuleNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Set the names of GLB Service that will trigger the specified
     * event types. If the event type has no GLB Service names configured,
     * all objects of this type will match.
     */
    public void setServiceNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Set the names of SLM Class that will trigger the specified
     * event types. If the event type has no SLM Class names configured,
     * all objects of this type will match.
     */
    public void setSlmNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Set the names of Virtual Server that will trigger the specified
     * event types. If the event type has no Virtual Server names configured,
     * all objects of this type will match.
     */
    public void setVserverNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;

    /**
     * Set the names of Traffic Manager that will trigger the specified
     * event types. If the event type has no Traffic Manager names configured,
     * all objects of this type will match.
     */
    public void setZxtmNames(java.lang.String[] names, java.lang.String[][] objects) throws java.rmi.RemoteException, com.zeus.soap.zxtm._1_0.InvalidInput, com.zeus.soap.zxtm._1_0.InvalidOperation, com.zeus.soap.zxtm._1_0.DeploymentError, com.zeus.soap.zxtm._1_0.ObjectDoesNotExist;
}
